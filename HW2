################################ Question 1 ################################

import math
def factors(num):
    curr_factors = []
    for i in range(1, int(math.sqrt(num))):
        if (num % i == 0):
            yield i
            curr_factors.append(num//i)
    for i in range(len(curr_factors)):
        yield curr_factors.pop()
        

################################ Question 2 ################################

def e_approx(n):
    curr = 1
    append = 1
    for i in range(1, n+1):
        append *= i
        curr = curr + (1/append)
    return curr

def main():
    for n in range(15):
        curr_approx = e_approx(n)
        approx_str = "{:.15f}".format(curr_approx)
        print("n =", n, "Approximation:", approx_str)


################################ Question 3 ################################

def split_parity(lst):
    even_numbers = 0
    first_even = 0
    for i in range(len(lst)):
        if (lst[i]%2 == 0):
            even_numbers += 1
            if (even_numbers < 2):
                first_even = i
        else:
            lst[i], lst[first_even] = lst[first_even], lst[i]
            first_even = first_even + 1


################################ Question 4 ################################

def two_sum(srt_lst, target):
    largest = len(srt_lst)-1
    smallest = 0
    found = False
    while found is False and largest > smallest:
        if (srt_lst[smallest] + srt_lst[largest] == target):
            found = True
        elif (srt_lst[smallest] + srt_lst[largest] >= target):
            largest = largest - 1
        elif (srt_lst[smallest] + srt_lst[largest] <= target):
            smallest = smallest + 1
    if found is True:
        return (smallest, largest)
    else:
        return ("None")
        

################################ Question 5 ################################

def findChange(lst01):
    start = 0
    end = len(lst01) -1
    while start<=end:
        mid = (start+end)//2
        if lst01[mid] ==1:
            return mid
        else:
            start = mid+1
    return -1
